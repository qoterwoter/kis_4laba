{"version":3,"sources":["Api/ApiService.js","Api/ApiTest.js","Components/Header.js","Components/Staff.js","Components/Admin.js","Components/Main.js","Components/LoginForm.js","Components/AboutUs.js","Components/CreateUpdateStudent.js","App.js","index.js"],"names":["URL","ApiService","status","postfix","secondpostfix","outStat","link","a","url","fetch","method","headers","localStorage","token","then","res","json","response","id","student","body","JSON","stringify","console","log","React","Component","apiService","ApiTest","props","state","students","getDatas","setState","data","className","this","map","name","surname","getStatus","course","Header","logout","event","preventDefault","setLogged","removeItem","history","push","href","to","onClick","HeaderWithRouter","withRouter","Staff","news","newz","title","description","src","photo","alt","user","date","Admin","handleSubmit","bind","value","createData","e","Object","assign","target","deleteData","getData","sort","handleSort","scope","handleDelete","Main","getItem","is_staff","is_superuser","Login","getPermissions","users","username","setItem","set_status","login","callback","credentials","undefined","catch","alert","inputChange","cred","password","for","type","onChange","LoginWithRouter","AboutUs","bootstrap","rel","integrity","crossorigin","CreateUpdateStudent","params","queryString","parse","location","search","handleUpdate","handleCreate","updateData","studentreq","onSubmit","handleChange","CreateUpdateStudentWithRouter","App","onChangeToken","is_logged","setLoggedStatus","setisStaffIsSuperuser","LoginForm","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1383ab78.chunk.js","sourcesContent":["import React from 'react'\r\nconst URL = 'http://localhost:8000/api';\r\n\r\n\r\nexport default class ApiService extends React.Component {\r\n    getStatus(status,postfix, secondpostfix) {\r\n        let outStat;\r\n        switch(status) {\r\n            case 'q':\r\n                outStat = `Зачислен ${postfix}`\r\n                break\r\n            case `y`:\r\n                outStat = `Учится ${postfix}`\r\n                break\r\n            case `a`:\r\n                outStat = `Решается об обучении ${postfix}`\r\n                break\r\n            case `n`:\r\n                outStat = `Отчислен ${secondpostfix}`\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        return outStat\r\n    }\r\n    async getDatas(link) {\r\n        let url = URL + `/${link}/`\r\n        const response = await fetch(url, {\r\n            method: \"GET\", \r\n            headers: {\r\n                'Authorization':`Token ${localStorage.token}`,\r\n            }\r\n        })\r\n        .then((res) => res.json())\r\n        return response\r\n    }\r\n\r\n    async getData(id,link) {\r\n        let url = URL + `/${link}/${id}`;\r\n        return await fetch(url,{\r\n            method:\"GET\",\r\n            headers: {\r\n                'Authorization':`Token ${localStorage.token}`,\r\n            }\r\n        })\r\n        .then((res)=> res.json())\r\n    }\r\n\r\n    async deleteData(id,link){\r\n        let url = URL + `/${link}/${id}`;\r\n        return await fetch(url,{\r\n            method:\"DELETE\",\r\n            headers: {\r\n                'Authorization':`Token ${localStorage.token}`,\r\n            }\r\n        })\r\n    }\r\n\r\n    async createData(student,link) {\r\n        let url = URL + `/${link}/`;\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'Authorization':`Token ${localStorage.token}`,\r\n            }\r\n        })\r\n        .then(res=>{console.log(res)})\r\n    }\r\n\r\n    async updateData(student,link) {\r\n        let url = URL + `/${link}/${student.id}`\r\n        return fetch(url, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'Authorization':`Token ${localStorage.token}`,\r\n            }\r\n        })\r\n        .then(res=>{console.log(res)}) \r\n    }\r\n}","import React from 'react';\r\nimport ApiService from './ApiService'\r\n\r\nconst apiService = new ApiService();\r\nconst link = 'students';\r\nexport default class ApiTest extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            students:[]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        apiService.getDatas(link).then(response=> {\r\n            this.setState({students: response.data})\r\n        })\r\n    \r\n    }\r\n\r\n\r\n    render()  {\r\n        return (\r\n            <main className='apiTest'>\r\n                <h2 className='apiTest__title'>Список студентов</h2>\r\n                <ul className='apiTest__list'>\r\n                {this.state.students.map((student)=>\r\n                    <li className='apiTest__item' key={student.id}>\r\n                        #{student.id}: {student.name} {student.surname}<br/>\r\n                        {apiService.getStatus(student.status,'на','после')} {student.course} курсе\r\n                    </li>\r\n                )}\r\n                </ul>\r\n            </main>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { withRouter} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport '../Styles/Style.css'\r\n\r\nclass Header extends React.Component {\r\n\r\n    logout = event => {\r\n        event.preventDefault();\r\n        this.props.setLogged(false)\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('is_staff')\r\n        localStorage.removeItem('is_superuser')\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {return(\r\n        <header className='header'>\r\n            <nav className='navbar'>\r\n                <a href='#brand' className='navbar__brand'>AllStudents</a>\r\n                <ul className='navbar__ul ul__links'>\r\n                    <li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/Main'>Главная</Link>\r\n                    </li>\r\n                    <li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/ApiTest'>ApiTest</Link>\r\n                    </li>\r\n                    <li className='navbar__item'>\r\n                        <a className='navbar__link' href='http://project-4-sem.std-962.ist.mospolytech.ru/api/students/'>RestAPI</a>\r\n                    </li>\r\n                    <li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/AboutUs'>О нас</Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className='navbar__ul'>\r\n                    <li className='navbar__item'>\r\n                        <a className='navbar__link' href='#logout' onClick={this.logout}>Выйти</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )}\r\n}\r\nconst HeaderWithRouter = withRouter(Header)\r\nexport default HeaderWithRouter","import React from 'react';\r\nimport ApiService from '../Api/ApiService'\r\n\r\nconst link = 'news';\r\nconst apiService = new ApiService();\r\n\r\nexport default class Staff extends React.Component { \r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state={\r\n            news:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiService.getDatas(link).then(response=>{\r\n            this.setState({news:response.data})\r\n            console.log(response.data)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n    return(\r\n        <div className='staff'>\r\n            <h2>Новости для персонала</h2>\r\n            <div className='news'>\r\n                {this.state.news.map((newz)=>\r\n                    <div className='news__block block'>\r\n                        <h4 className='block__title'>{newz.title}</h4>\r\n                        <p className='block__description'>{newz.description}</p>\r\n                        <img className='block__image' src={newz.photo} alt='no description'/>\r\n                        <p className='block__author'>Автор: <i>{newz.user}</i></p>\r\n                        <p className='block__date'>Опубликовано: {newz.date}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )}\r\n}","import React from 'react'\r\nimport ApiService from '../Api/ApiService';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst apiService = new ApiService();\r\nconst link = 'students'\r\nexport default class Admin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            student:{\r\n                name: 'Alexander',\r\n                surname: 'Tsalapov',\r\n                course: 1,\r\n                status: 'y',\r\n            },\r\n            students:[]\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        let student = this.state.student\r\n        let value = {\r\n            \"name\": student.name,\r\n            \"surname\": student.surname,\r\n            \"status\": student.status,\r\n            \"course\": student.course,\r\n        }\r\n        apiService.createData(value,link)\r\n    }\r\n    handleChange(e) {\r\n        // this.setState({...this.state.name,name: e.target.value})\r\n        this.setState(state=>{\r\n            let student = Object.assign({},state.student);\r\n            student[e.target.name] = e.target.value\r\n            return {\r\n                student\r\n            }\r\n        })\r\n        console.log(this.state.student)\r\n    }\r\n\r\n    getData() {\r\n        apiService.getDatas(link).then(response=> {\r\n            this.setState({students: response.data})\r\n        })\r\n    }\r\n\r\n    handleDelete(id) {\r\n        apiService.deleteData(id,link)\r\n        this.getData();\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    handleSort(e) {\r\n        this.state.students.sort()\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='admin'>\r\n                <div className='table__description'>\r\n                    <h4 className='table__title'>Список студентов</h4>\r\n                    <Link className='admin__button' to='/CreateUpdateStudent'>Добавить студента</Link>\r\n                </div>\r\n                {/* <ul>\r\n                {this.state.students.map((student)=>\r\n                    <li key={student.id}>\r\n                        <p>#{student.id}: {student.name} {student.surname}</p>\r\n                        {apiService.getStatus(student.status)} {student.course} курсе\r\n                        <button className='btn btn-danger' onClick={e => apiService.deleteStudent(student.id)}>Удалить</button>\r\n                        \r\n                    </li>\r\n                )}\r\n                </ul> */}\r\n                <table className='table'>\r\n                    <thead className='table__head'>\r\n                        <tr className='table__row'>\r\n                            <th onClick={()=>this.handleSort('id')} scope='col'>#</th>\r\n                            <th scope='col'>Имя</th>\r\n                            <th scope='col'>Фамилия</th>\r\n                            <th scope='col'>Статус</th>\r\n                            <th scope='col'>Курс</th>\r\n                            <th scope='col'></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='table__body'>\r\n                        {this.state.students.map((student)=>\r\n                           <tr className='table__row'>\r\n                               <td>{student.id}</td>\r\n                               <td>{student.name}</td>\r\n                               <td>{student.surname}</td>\r\n                               <td>{apiService.getStatus(student.status,'','')}</td>\r\n                               <td>{student.course}</td>\r\n                               <td><button className='table__delete' onClick={e=>{\r\n                                //    apiService.deleteData(student.id,link)\r\n                                //    apiService.getDatas(link).then(response=> {\r\n                                //     this.setState({students: response.data})\r\n                                // })\r\n                                this.handleDelete(student.id)\r\n                            }}>Удалить</button>\r\n                               <Link className='table__update' to={'/CreateUpdateStudent/?id='+student.id}>Изменить</Link></td>\r\n                           </tr> \r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Staff from './Staff'\r\nimport Admin from './Admin'\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return(\r\n        <main>\r\n            <div className='mainPage'>\r\n                <h1 className=\"mainPage__title\">Здравствуйте, {localStorage.getItem('username')}</h1>\r\n            </div>\r\n            {this.props.is_staff===true||localStorage.getItem('is_staff')===\"true\"\r\n            ? <Staff/>\r\n            : null\r\n            }\r\n            {this.props.is_superuser===true||localStorage.getItem('is_superuser')===\"true\"\r\n            ? <Admin/>\r\n            : null\r\n            }\r\n        </main>\r\n    )}\r\n}","import React from 'react';\r\nimport { withRouter} from 'react-router-dom'\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      credentials: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      url: 'http://localhost:8000/',\r\n      data: {},\r\n      users: [],\r\n      token: null,\r\n    }\r\n  }\r\n  \r\n  getPermissions = async event => {\r\n    await fetch(`${this.state.url}api/users/`,{\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type' :'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(res=>{\r\n      this.setState({users:res})\r\n      this.state.users.map((user)=>{\r\n          if(user.username===localStorage.getItem('username')) {\r\n            localStorage.setItem('is_staff',user.is_staff);\r\n            localStorage.setItem('is_superuser',user.is_superuser);\r\n            this.props.set_status(user.is_staff,user.is_superuser);\r\n            console.log(this.props.is_staff,this.props.is_superuser);\r\n        }\r\n        return user;\r\n      })\r\n    })\r\n    this.props.history.push(\"/Main\");\r\n    this.props.setLogged(true)\r\n  }\r\n  login = async (event,callback) => {\r\n    event.preventDefault()\r\n    await fetch(`${this.state.url}auth/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state.credentials)\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n      this.setState({data:res})\r\n      if(res.token!==null && res.token!==undefined) {\r\n        localStorage.setItem('token',res.token)\r\n        this.setState({'token':res.token})\r\n      }\r\n    })\r\n    .catch()\r\n\r\n    if(localStorage.getItem('token')!==null ) {\r\n      this.getPermissions();\r\n      } else {\r\n        alert('Вы ввели неверные данные')\r\n      }\r\n    }\r\n  \r\n\r\n  inputChange = event => {\r\n    let cred = this.state.credentials;\r\n    cred[event.target.name] = event.target.value;\r\n    this.setState({credentials: cred});\r\n    localStorage.setItem('username',cred.username)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div className='loginForm'>\r\n      <h1 className='loginForm__title'>Войдите</h1>\r\n      <form>\r\n        <div className='loginForm__div'>\r\n          <label className='loginForm__label' for='username'>\r\n            Имя пользователя:\r\n          </label>\r\n            <input \r\n              id='username'\r\n              className='loginForm__input'\r\n              type='text'\r\n              name=\"username\"\r\n              value={this.state.credentials.username}\r\n              onChange={this.inputChange}\r\n            />\r\n        </div>\r\n        <div className='loginForm__div'>\r\n          <label className='loginForm__label' for='password'>\r\n            Пароль:\r\n          </label>\r\n          <input\r\n            id='password'\r\n            className='loginForm__input'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.credentials.password} \r\n            onChange={this.inputChange}\r\n          />\r\n        </div>\r\n        <button className='loginForm__button' onClick={e=>this.login(e)}>Войти</button>\r\n      </form>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst LoginWithRouter = withRouter(Login)\r\nexport default LoginWithRouter","import React from 'react'\r\nimport '../Styles/Style.css'\r\n\r\nexport default class AboutUs extends React.Component {\r\n\r\n    logout = event => {\r\n        event.preventDefault();\r\n        this.props.setLogged(false)\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('is_staff')\r\n        localStorage.removeItem('is_superuser')\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n            \r\n        const bootstrap = <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"></link>\r\n        \r\n        return(\r\n        <div className='container'>\r\n            {bootstrap}\r\n            <h2>О нас</h2>\r\n            <p>\r\n            Храните все наиболее интересные факты из жизни, ведите резюме, записные книжки, блоги, составляйте планы и прочее. \r\n            Соберите в личном пространстве файлы, коллекции рисунков, графиков, чертежей, схем, проектов и творческих работ \r\n            (фотографий событий, поделок, собранных моделей) в текстовом, графическом, мультимедийном формате; коллекции текстовых файлов, ссылок, презентаций и фотографий,\r\n            видео и анимационных роликов; оцифрованную коллекцию грамот, дипломов, свидетельств, сертификатов, лицензий и прочих документов; рекомендации, комментарии,\r\n            сообщения и советы друзей и педагогов.\r\n            </p>\r\n            <img src='web-app/src/Images/background.jpg'></img>\r\n        </div>\r\n    )}\r\n}","import React from 'react'\r\nimport ApiService from '../Api/ApiService';\r\nimport {Link} from 'react-router-dom'\r\nimport queryString from 'query-string';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst apiService = new ApiService();\r\nconst url = 'students'\r\nclass CreateUpdateStudent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            student:{\r\n                name: '',\r\n                surname: '',\r\n                course: 1,\r\n                status: 'y',\r\n            },\r\n            students:[],\r\n            params: queryString.parse(this.props.location.search)\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleCreate() {\r\n        let student = this.state.student\r\n        let value = {\r\n            \"name\": student.name,\r\n            \"surname\": student.surname,\r\n            \"status\": student.status,\r\n            \"course\": student.course,\r\n        }\r\n        apiService.createData(value,url)\r\n        this.props.history.push(\"/Main\")\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let params = this.state.params;\r\n        event.preventDefault()\r\n        if(params&&params.id) {\r\n            this.handleUpdate(params.id)\r\n        } else {\r\n            this.handleCreate();\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        // this.setState({...this.state.name,name: e.target.value})\r\n        this.setState(state=>{\r\n            let student = Object.assign({},state.student);\r\n            student[e.target.name] = e.target.value\r\n            return {\r\n                student\r\n            }\r\n        })\r\n        console.log(this.state.student)\r\n    }\r\n    handleUpdate(e) {\r\n        this.props.history.push(\"/Main\")\r\n        apiService.updateData(this.state.student,url)\r\n    }\r\n    componentDidMount() {\r\n        let params = this.state.params;\r\n        if(params && params.id) {\r\n            apiService.getData(params.id,url).then((studentreq)=>{\r\n                this.setState({student:studentreq})\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <form className='createUpdateForm' onSubmit={this.handleSubmit}>\r\n                <h4 className='createUpdateForm__title'>Добавить студента</h4>\r\n                <label className='createUpdateForm__label' for ='name'> Имя:</label>\r\n                <input\r\n                    id='name'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='name'\r\n                    type=\"text\"\r\n                    value={this.state.student.name}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <label className='createUpdateForm__label' for='surname'> Фамилия:</label><input\r\n                    id='surname'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='surname'\r\n                    type=\"text\"\r\n                    value={this.state.student.surname}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <label className='createUpdateForm__label' for='status'> Статус обучения:<br/>(учится/отчислен/выпустился и т.п.)</label>\r\n                <select \r\n                    id='status'\r\n                    className='createUpdateForm__select'\r\n                    name='status'\r\n                    value={this.state.student.status} \r\n                    onChange={e=>this.handleChange(e)}\r\n                >\r\n                    <option value='y'>Учится</option>\r\n                    <option value='q'>Зачислен</option>\r\n                    <option value='n'>Отчислен</option>\r\n                    <option value='a'>Решается</option>\r\n                </select>\r\n                <label className='createUpdateForm__label' for='course'> Курс:</label>\r\n                <input\r\n                    id='course'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='course'\r\n                    type=\"text\"\r\n                    value={this.state.student.course}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <div className='createUpdateForm__buttons'>\r\n                    <input className=\"createUpdateForm__button button__save\" type=\"submit\" value=\"Сохранить\" />\r\n                    <Link className='createUpdateForm__button button__back' to='/Main'>Назад</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst CreateUpdateStudentWithRouter = withRouter(CreateUpdateStudent)\r\nexport default CreateUpdateStudentWithRouter","import React from 'react'\r\nimport './App.css';\r\nimport ApiTest from'./Api/ApiTest'\r\nimport Header from './Components/Header'\r\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Main from './Components/Main';\r\nimport LoginForm from './Components/LoginForm';\r\nimport AboutUs from './Components/AboutUs';\r\nimport CreateUpdateStudent from './Components/CreateUpdateStudent'\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_logged: localStorage.getItem('token') ? true: false,\r\n      token: null,\r\n      is_staff: localStorage.getItem('is_staff'),\r\n      is_superuser: localStorage.getItem('is_superuser'),\r\n    }\r\n\r\n    this.setLoggedStatus = this.setLoggedStatus.bind(this)\r\n    this.setisStaffIsSuperuser = this.setisStaffIsSuperuser.bind(this)\r\n  }\r\n  onChangeToken = e => {\r\n    this.setState(e)\r\n  }\r\n  componentDidMount() {\r\n    if(localStorage.getItem('token')!==undefined){\r\n      this.setState({'is_logged':false})\r\n    }\r\n  }\r\n  setisStaffIsSuperuser(is_staff,is_superuser) {\r\n    this.setState({'is_staff':is_staff,'is_superuser':is_superuser})\r\n  }\r\n  setLoggedStatus(e) {\r\n    this.setState({'is_logged':e});\r\n  }\r\n  render() {\r\n    if(localStorage.getItem('token')===null||localStorage.getItem('token')===undefined) {\r\n      return (\r\n      <Router>\r\n        <LoginForm \r\n          token={this.state.token}\r\n          url={this.state.url}\r\n          is_logged={this.state.is_logged}\r\n          setLogged={this.setLoggedStatus}\r\n          is_staff={this.state.is_staff}\r\n          is_superuser={this.state.is_superuser}\r\n          set_status={this.setisStaffIsSuperuser}\r\n        />\r\n      </Router>\r\n      )\r\n    } else {\r\n    return(\r\n    <Router>\r\n      <Header\r\n          token={this.state.token}\r\n          url={this.state.url}\r\n          is_logged={this.state.is_logged}\r\n          setLogged={this.setLoggedStatus}\r\n          is_staff={this.state.is_staff}\r\n          is_superuser={this.state.is_superuser}\r\n          set_status={this.setisStaffIsSuperuser}\r\n        />\r\n      <Switch>\r\n      <Route path='/Main'>\r\n          <Main\r\n            is_staff={this.state.is_staff}\r\n            is_superuser={this.state.is_superuser}\r\n          />\r\n        </Route>\r\n        <Route path='/ApiTest'>\r\n          <ApiTest\r\n            url = {this.state.url}\r\n          />\r\n        </Route>\r\n        <Route path='/AboutUs'>\r\n          <AboutUs></AboutUs>\r\n        </Route>\r\n        <Route path='/CreateUpdateStudent' component={CreateUpdateStudent}>\r\n        </Route>\r\n        {/* <Route path='/CreateUpdateStudent/:id' component={CreateUpdateStudent}> */}\r\n        <Route path='/CreateUpdateStudent/?id=id'> render={(props)=> <CreateUpdateStudent {...props}/>}\r\n        </Route>\r\n      </Switch>\r\n    </Router> \r\n  )}}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}